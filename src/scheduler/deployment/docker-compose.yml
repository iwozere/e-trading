version: '3.8'

services:
  scheduler:
    build:
      context: ../../..
      dockerfile: src/scheduler/deployment/Dockerfile
    container_name: trading-scheduler
    restart: unless-stopped
    environment:
      - TRADING_ENV=production
      - LOG_LEVEL=INFO
      - SCHEDULER_MAX_WORKERS=10
      - SCHEDULER_JOB_TIMEOUT=300
      - DATABASE_URL=postgresql://trading:password@postgres:5432/trading_db
      - NOTIFICATION_SERVICE_URL=http://notification:8000
      - DATA_CACHE_ENABLED=true
      - DATA_CACHE_TTL=300
    depends_on:
      - postgres
      - notification
    networks:
      - trading-network
    volumes:
      - scheduler-logs:/app/logs
      - scheduler-data:/app/data
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  postgres:
    image: postgres:15-alpine
    container_name: trading-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=trading_db
      - POSTGRES_USER=trading
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    networks:
      - trading-network
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro

  notification:
    image: trading-notification:latest
    container_name: trading-notification
    restart: unless-stopped
    environment:
      - TRADING_ENV=production
      - DATABASE_URL=postgresql://trading:password@postgres:5432/trading_db
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    networks:
      - trading-network

networks:
  trading-network:
    driver: bridge

volumes:
  postgres-data:
  scheduler-logs:
  scheduler-data: